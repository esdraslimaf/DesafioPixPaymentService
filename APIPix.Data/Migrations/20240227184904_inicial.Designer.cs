// <auto-generated />
using System;
using APIPix.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIPix.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240227184904_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIPix.Domain.Entities.ChavePix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoChavePix")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chaves");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChavePixId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChavePixId")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficiarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PagadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.HasIndex("PagadorId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("APIPix.Domain.Entities.ChavePix", "ChavePix")
                        .WithOne("Cliente")
                        .HasForeignKey("APIPix.Domain.Entities.Cliente", "ChavePixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChavePix");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("APIPix.Domain.Entities.Cliente", "Beneficiario")
                        .WithMany()
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPix.Domain.Entities.Cliente", "Pagador")
                        .WithMany()
                        .HasForeignKey("PagadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");

                    b.Navigation("Pagador");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.ChavePix", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
