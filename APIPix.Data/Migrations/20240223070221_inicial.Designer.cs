// <auto-generated />
using System;
using APIPix.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIPix.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240223070221_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIPix.Domain.Entities.ChavePix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoChavePix")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chaves");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.DestinoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChavePixId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantia")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChavePixId")
                        .IsUnique();

                    b.ToTable("DestinosPagamentos");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.OrigemPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChavePixId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantia")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChavePixId")
                        .IsUnique();

                    b.ToTable("OrigensPagamentos");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DestinoPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrigemPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DestinoPagamentoId");

                    b.HasIndex("OrigemPagamentoId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.DestinoPagamento", b =>
                {
                    b.HasOne("APIPix.Domain.Entities.ChavePix", "ChavePix")
                        .WithOne("Recebedor")
                        .HasForeignKey("APIPix.Domain.Entities.DestinoPagamento", "ChavePixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChavePix");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.OrigemPagamento", b =>
                {
                    b.HasOne("APIPix.Domain.Entities.ChavePix", "ChavePix")
                        .WithOne("Pagador")
                        .HasForeignKey("APIPix.Domain.Entities.OrigemPagamento", "ChavePixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChavePix");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("APIPix.Domain.Entities.DestinoPagamento", "DestinoPagamento")
                        .WithMany("Transacoes")
                        .HasForeignKey("DestinoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIPix.Domain.Entities.OrigemPagamento", "OrigemPagamento")
                        .WithMany("Transacoes")
                        .HasForeignKey("OrigemPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinoPagamento");

                    b.Navigation("OrigemPagamento");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.ChavePix", b =>
                {
                    b.Navigation("Pagador");

                    b.Navigation("Recebedor");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.DestinoPagamento", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("APIPix.Domain.Entities.OrigemPagamento", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
